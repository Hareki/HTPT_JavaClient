package view;

import com.fasterxml.jackson.core.JsonProcessingException;
import controller.Controller;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.io.File;
import java.io.IOException;
import java.net.ConnectException;
import java.text.DecimalFormat;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import model.FileInfo;
import model.Message;

public class MainForm extends javax.swing.JFrame {

    private DefaultTableModel tableModel;
    protected Controller controller;
    private DateTimeFormatter dateFormatter;

    public MainForm() {
        initComponents();
        init();
        this.getContentPane().setBackground(Color.white);
        this.setIconImage(new javax.swing.ImageIcon(getClass().getResource("/img/icon.png")).getImage());
        //(new javax.swing.ImageIcon(getClass().getResource("/img/upload_480px_black.png")));

    }
    private Color hoverColor = new Color(0, 82, 157);
    private Color idleColor = new Color(0, 109, 208);
    public String previousIP;

    private void init() {
        tableModel = (DefaultTableModel) tblDanhSachFile.getModel();
        tblDanhSachFile.getTableHeader().setFont(new Font("Segoe UI", 1, 20));
        tblDanhSachFile.setRowHeight(tblDanhSachFile.getRowHeight() + 15);
        controller = new Controller();
        dateFormatter = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");

        this.setLocationRelativeTo(null);

        setHorizontalAlignmentForColumn(tblDanhSachFile, 0, JLabel.CENTER);
        setHorizontalAlignmentForColumn(tblDanhSachFile, 2, JLabel.CENTER);
        setHorizontalAlignmentForColumn(tblDanhSachFile, 3, JLabel.CENTER);

        DefaultTableCellRenderer renderer = (DefaultTableCellRenderer) tblDanhSachFile.getTableHeader().getDefaultRenderer();
        renderer.setHorizontalAlignment(0);

        tblDanhSachFile.getTableHeader().setOpaque(false);
        tblDanhSachFile.getTableHeader().setBackground(Color.GRAY);
        tblDanhSachFile.getTableHeader().setForeground(Color.WHITE);
        //   this.jScrollPane1.getViewport().setBackground(Color.WHITE);
        setHyperLinkFormat(lblDoi);
    }

    private void setHyperLinkFormat(JLabel label) {
        label.setCursor(new Cursor(Cursor.HAND_CURSOR));
        Font font = label.getFont();
        Map attributes = font.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        label.setFont(font.deriveFont(attributes));
    }

    public static void setHorizontalAlignmentForColumn(JTable table, int columnNumber, int Alignment) {
        DefaultTableCellRenderer align = new DefaultTableCellRenderer();
        align.setHorizontalAlignment(Alignment);
        table.getColumnModel().getColumn(columnNumber).setCellRenderer(align);
        //JLabel.CENTER
    }

    private String readableFileSize(long sizeInByte) {
        if (sizeInByte <= 0) {
            return "0";
        }
        final String[] units = new String[]{"Bytes", "KB", "MB", "GB", "TB"};
        int digitGroups = (int) (Math.log10(sizeInByte) / Math.log10(1024));
        return new DecimalFormat("#,##0.#").format(sizeInByte / Math.pow(1024, digitGroups)) + " " + units[digitGroups];
    }

    public void checkBtnXoaBtnTaiXuongState() {
        if (tableModel.getRowCount() == 0) {
            btnXoa.setEnabled(Boolean.FALSE);
            btnTaiXuong.setEnabled(Boolean.FALSE);
        } else {
            btnXoa.setEnabled(Boolean.TRUE);
            btnTaiXuong.setEnabled(Boolean.TRUE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDanhSachFile = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnTaiLen = new javax.swing.JButton();
        btnTaiXuong = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnLamMoi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lblIP = new javax.swing.JLabel();
        lblDoi = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Đề tài 18 HTPT -Web Service");
        setMinimumSize(new java.awt.Dimension(900, 425));
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(128, 128, 128));

        tblDanhSachFile.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        tblDanhSachFile.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã", "Tên file", "Kích thước", "Ngày tải lên"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblDanhSachFile.setSelectionBackground(new java.awt.Color(184, 218, 255));
        tblDanhSachFile.setSelectionForeground(new java.awt.Color(51, 51, 0));
        tblDanhSachFile.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblDanhSachFile);
        if (tblDanhSachFile.getColumnModel().getColumnCount() > 0) {
            tblDanhSachFile.getColumnModel().getColumn(0).setMinWidth(60);
            tblDanhSachFile.getColumnModel().getColumn(0).setMaxWidth(60);
            tblDanhSachFile.getColumnModel().getColumn(2).setMinWidth(120);
            tblDanhSachFile.getColumnModel().getColumn(2).setMaxWidth(120);
            tblDanhSachFile.getColumnModel().getColumn(3).setMinWidth(210);
            tblDanhSachFile.getColumnModel().getColumn(3).setMaxWidth(210);
        }

        jLabel1.setBackground(new java.awt.Color(128, 128, 128));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(128, 128, 128));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Danh sách file");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 5));

        btnTaiLen.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnTaiLen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/upload_480px_black.png"))); // NOI18N
        btnTaiLen.setText("Tải lên");
        btnTaiLen.setPreferredSize(new java.awt.Dimension(160, 40));
        btnTaiLen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiLenActionPerformed(evt);
            }
        });
        jPanel1.add(btnTaiLen);

        btnTaiXuong.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnTaiXuong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/download_480px_black.png"))); // NOI18N
        btnTaiXuong.setText("Tải xuống");
        btnTaiXuong.setPreferredSize(new java.awt.Dimension(160, 40));
        btnTaiXuong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaiXuongActionPerformed(evt);
            }
        });
        jPanel1.add(btnTaiXuong);

        btnXoa.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/waste_480px_black.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setPreferredSize(new java.awt.Dimension(160, 40));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);

        btnLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        btnLamMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reset_480px_black.png"))); // NOI18N
        btnLamMoi.setText("Làm mới");
        btnLamMoi.setPreferredSize(new java.awt.Dimension(160, 40));
        btnLamMoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLamMoiMouseClicked(evt);
            }
        });
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });
        jPanel1.add(btnLamMoi);

        jPanel2.setBackground(new java.awt.Color(227, 227, 227));
        jPanel2.setForeground(new java.awt.Color(227, 227, 227));
        jPanel2.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 10, 5));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Địa chỉ IP Web Service Server:");
        jPanel2.add(jLabel3);

        lblIP.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblIP.setForeground(new java.awt.Color(51, 51, 51));
        lblIP.setText("192.168.1.1");
        jPanel2.add(lblIP);

        lblDoi.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        lblDoi.setForeground(new java.awt.Color(0, 109, 208));
        lblDoi.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoi.setText("Đổi");
        lblDoi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblDoiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblDoiMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblDoiMouseExited(evt);
            }
        });
        jPanel2.add(lblDoi);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE))
                        .addGap(25, 25, 25))))
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLamMoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLamMoiMouseClicked
        displayAllFileInfosInTable(false);
    }//GEN-LAST:event_btnLamMoiMouseClicked

    private void btnTaiXuongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiXuongActionPerformed
        int selectedRow = tblDanhSachFile.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn file cần tải", "Thông báo", JOptionPane.INFORMATION_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/infor.png")));
            return;
        }
        // lấy id, tên của file
        Integer id = (Integer) tableModel.getValueAt(selectedRow, 0);
        String fileName = (String) tableModel.getValueAt(selectedRow, 1);
        // tạo hộp thoại save file
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setSelectedFile(new File(fileName));
        fileChooser.setDialogTitle("Chọn thư mục tải xuống!");
        int returnVal = fileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            String fullFilePath = fileChooser.getSelectedFile().getAbsolutePath();
            // kiểm tra file đã trùng hay chưa
            if (new File(fullFilePath).exists()) {
                int selected = JOptionPane.showConfirmDialog(null, "File đã tồn tại bán có muốn ghi đè không?", "Xác nhận",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
                if (selected != JOptionPane.OK_OPTION) {
                    return;
                }
            }
            Message message = controller.downloadFile(id, fullFilePath);
            createNotificationFromMessage(message);
        }
    }//GEN-LAST:event_btnTaiXuongActionPerformed

    private void btnTaiLenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaiLenActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setDialogTitle("Chọn file!");
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            try {
                String filePath = fileChooser.getSelectedFile().getAbsolutePath();
                Message message = controller.uploadFile(filePath);
                createNotificationFromMessage(message);
                if (message.getStatus() == Message.Status.SUCCESS) {
                    displayAllFileInfosInTable(false);
                    checkBtnXoaBtnTaiXuongState();
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Không đọc được file", "Lỗi", JOptionPane.ERROR_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/error.png")));
            }
        }
    }//GEN-LAST:event_btnTaiLenActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int selectedRow = tblDanhSachFile.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn file cần tải", "Thông báo", JOptionPane.INFORMATION_MESSAGE,
                    new javax.swing.ImageIcon(getClass().getResource("/img/infor.png")));
            return;
        }
        int selected = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xoá file này?", "Xác nhận",
                JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/warning.png")));
        if (selected != JOptionPane.OK_OPTION) {
            return;
        }
        Integer id = (Integer) tableModel.getValueAt(selectedRow, 0);
        Message message = controller.deleteFile(id);
        createNotificationFromMessage(message);
        if (message.getStatus() == Message.Status.SUCCESS) {
            displayAllFileInfosInTable(false);
            checkBtnXoaBtnTaiXuongState();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void lblDoiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDoiMouseClicked
        new IPInputDialog(this, true).setVisible(true);

    }//GEN-LAST:event_lblDoiMouseClicked

    private void lblDoiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDoiMouseEntered
        lblDoi.setForeground(hoverColor);
    }//GEN-LAST:event_lblDoiMouseEntered

    private void lblDoiMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblDoiMouseExited
        lblDoi.setForeground(idleColor);
    }//GEN-LAST:event_lblDoiMouseExited

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
//        displayAllFileInfosInTable(true);
//        checkBtnXoaBtnTaiXuongState();

    }//GEN-LAST:event_formComponentShown

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        System.exit(0);
    }//GEN-LAST:event_formWindowClosed

    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        displayAllFileInfosInTable(false);
        checkBtnXoaBtnTaiXuongState();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void insertARowIntoTable(FileInfo fileInfo) {
        tableModel.addRow(new Object[]{
            fileInfo.getId(),
            "  " + fileInfo.getName(),
            readableFileSize(fileInfo.getSize()),
            fileInfo.getUploadedDate().format(dateFormatter)
        });
    }

    public void displayAllFileInfosInTable(boolean isInit) {
        tableModel.setRowCount(0);
        try {
            List<FileInfo> fileInfos = controller.getAllFileInfos();
            for (FileInfo fileInfo : fileInfos) {
                insertARowIntoTable(fileInfo);
            }
            this.btnLamMoi.setEnabled(true);
            this.btnTaiLen.setEnabled(true);
            this.btnTaiXuong.setEnabled(true);
        } catch (javax.ws.rs.ProcessingException ex) {
            JOptionPane.showMessageDialog(null, "Không thể kết nối đến Server tại địa chỉ IP vừa nhập, đó có thể là do:\n"
                    + "   - Nhập sai địa chỉ IP mong muốn\n"
                    + "   - Server tại địa chỉ IP mong muốn chưa được khởi động", "Lỗi",
                    JOptionPane.ERROR_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/error.png")));
            if (isInit) {
                lblIP.setText(lblIP.getText() + " (Lỗi kết nối)");
            } else {
                lblIP.setText(previousIP);
            }
            this.btnLamMoi.setEnabled(false);
            this.btnTaiLen.setEnabled(false);
            this.btnTaiXuong.setEnabled(false);
        }

    }

    private void createNotificationFromMessage(Message message) {
        if (message.getStatus() == Message.Status.SUCCESS) {
            JOptionPane.showMessageDialog(null, message.getMessage(), "Thông báo", JOptionPane.INFORMATION_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/infor.png")));
        } else {
            JOptionPane.showMessageDialog(null, message.getMessage(), "Lỗi", JOptionPane.ERROR_MESSAGE, new javax.swing.ImageIcon(getClass().getResource("/img/error.png")));
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new IPInputDialog(new MainForm(), true).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnTaiLen;
    private javax.swing.JButton btnTaiXuong;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDoi;
    protected javax.swing.JLabel lblIP;
    private javax.swing.JTable tblDanhSachFile;
    // End of variables declaration//GEN-END:variables
}
